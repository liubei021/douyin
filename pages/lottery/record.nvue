<template>
	<view class="record">
		<view class="record-main">
			<image class="record-back" src="/static/images/icon-back.png" @click="back()">
				<text class="record-title">Winning Record</text>
				<view class="record-header border-bottom">
					<text class="record-item">number</text>
					<text class="record-item">time</text>
					<text class="record-item">points</text>
				</view>
				<scroll-view scroll-y="true" class="record-content" @scrolltolower="scrolltolower()">
					<view v-for="item in prizeList" :key="item.key" class="record-row">
						<text class="record-item">{{item.orderNum}}</text>
						<text class="record-item">{{item.createTime}}</text>
						<text class="record-item">{{item.pointsValue}}</text>
					</view>
					
				</scroll-view>
				<view class="record-header">
					<text class="record-item">sum</text>
					<text class="record-item"></text>
					<text class="record-item">{{sumPoints}}</text>
				</view>
		</view>
	</view>
</template>

<script>
	var system = uni.getSystemInfoSync();
	export default {
		data() {
			return {
				screenHeight: system.screenHeight,
				prizeList: [],
				page: 1,
				sumPoints: 0
			}
		},
		onShow() {
			getApp().getUserIsDisable();
			this.getPrizeList()
		},
		methods: {
			getPrizeList() {
				const _this = this
				var userId = getApp().getUserInfoSession().id
				var serverUrl = getApp().globalData.serverUrl;
				uni.request({
					method: "GET",
					url: serverUrl + "/lottery/record/list?userId=" + userId + "&page=" + _this.page +
						"&pageSize=10",
					success(result) {
						const res = result.data
						if (res.status == 200) {
							res.data.rows.forEach(x => {
								_this.prizeList.push(x)
							})
							_this.sumPoints = res.data.map.sumPointsValue
						}
					}
				});
			},
			scrolltolower() {
				this.page++
				this.getPrizeList()
			},
			back() {
				uni.navigateBack({
					delta: 1
				})
			},
		}
	}
</script>

<style scoped>
	.record {
		position: absolute;
		left: 0;
		right: 0;
		top: 0;
		bottom: 0;
		background-color: #691b4f;
		padding: 80rpx 50rpx;
	}

	.record-main {
		border-radius: 20px;
	}

	.record-back {
		position: absolute;
		width: 40rpx;
		height: 40rpx;
		opacity: 0.8;
	}

	.record-title {
		color: white;
		font-size: 40rpx;
		font-weight: bold;
		text-align: center;
		margin: 45rpx 0 20rpx;
	}

	.record-header,
	.record-row {
		display: flex;
		flex-direction: row;
		justify-content: space-between;
		margin-bottom: 30rpx;
	}

	.record-header {
		padding: 20rpx 0;
	}
	
	.border-bottom {
		border-bottom: 1px solid white;
	}

	.record-content {
		height: 920rpx;
	}

	.record-item {
		color: white;
		font-size: 32rpx;
		font-weight: bold;
		width: 200rpx;
		text-align: center;
	}
</style>
