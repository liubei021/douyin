<style>
	.page {
		position: absolute;
		left: 0;
		right: 0;
		top: 0;
		bottom: 0;
		background-color: #181b27;

		display: flex;
		flex-direction: column;
		justify-content: flex-start;
	}

	.line {
		height: 1rpx;
		background-color: #393a41;
		width: 750rpx;
	}

	.single-line-box {
		display: flex;
		flex-direction: row;
		justify-content: flex-start;

		padding: 30rpx;
		margin-top: 20rpx;
	}

	.username-input {
		padding-left: 10px;
		color: #FFFFFF;
		font-size: 14px;
		width: 600rpx;
		height: 50px;
		background-color: #4a4c52;
		border-top-left-radius: 10px;
		border-bottom-left-radius: 10px;
	}

	.length-cal {
		width: 100rpx;
		height: 50px;
		background-color: #4a4c52;
		padding-right: 10px;
		display: flex;
		flex-direction: column;
		justify-content: flex-end;
		padding-bottom: 12rpx;
		border-top-right-radius: 10px;
		border-bottom-right-radius: 10px;
	}

	.length-text {
		font-size: 12px;
		font-weight: 400;
		color: #F1F1F1;
	}

	.tips {
		font-size: 12px;
		font-weight: 400;
		color: #BFBFBF;
		width: 700rpx;
	}
</style>
<template>
	<view class="page">
		<view class="single-line-box" style="align-self: center;">
			<input class="username-input" type="text" :value="password" :model="password"
				placeholder="Please fill in the password~" @input="typingContent" />

			<view class="length-cal">
			</view>
		</view>
	</view>
</template>

<script>
	var app = getApp();
	export default {
		data() {
			return {
				password: ''
			}
		},
		onNavigationBarButtonTap() {
			this.updatePassword();
		},
		onShow() {
			getApp().getUserIsDisable();
		},
		methods: {
			updatePassword() {
				var me = this;
				var userId = getApp().getUserInfoSession().id;
				var password = this.password;

				var pendingUserInfo = {
					"userId": userId,
					"password": password
				};

				var serverUrl = app.globalData.serverUrl;
				uni.request({
					method: "POST",
					header: {
						headerUserId: userId,
						headerUserToken: app.getUserSessionToken()
					},
					url: serverUrl + "/userInfo/updatePassword",
					data: pendingUserInfo,
					success(result) {
						if (result.data.status == 200) {
							uni.request({
								method: "POST",
								url: serverUrl + "/passport/logout?userId=" + userId,
								success(result) {
									var status = result.data.status;
									if (status == 200) {
										getApp().clearUserInfo();
										uni.reLaunch({
											url: "../loginRegist/loginRegist"
										})
									} else if (status != 200) {
										uni.showToast({
											title: result.data.msg,
											icon: "none"
										});
									}
								}
							});
						} else {
							uni.showToast({
								title: result.data.msg,
								icon: "none",
								duration: 3000
							});
						}
					}
				})
			},
			typingContent(e) {
				var event = e;
				this.password = e.detail.value;
			},
		}
	}
</script>
