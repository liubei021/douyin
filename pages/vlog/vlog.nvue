<style>
	.page {
		position: absolute;
		left: 0;
		right: 0;
		top: 0;
		bottom: 0;
		background-color: #000000;
	}

	.header {
		position: absolute;
		left: 0;
		right: 0;
		flex-direction: row;
		justify-content: space-between;
		height: 100rpx;
		line-height: 100rpx;
		align-items: center;
		padding-left: 40rpx;
		padding-right: 40rpx;
	}

	.header-icon {
		width: 40rpx;
		height: 40rpx;
	}
	.header-avator {
		width: 100rpx;
		height: 100rpx;
		border-radius: 50%;
	}
</style>

<!-- 视频详情页，从[朋友][我][扫码][消息]跳转过来的 -->
<template>
	<view class="page">
		<!-- 这里是状态栏, 每个页面都需要有，目的不让页面覆盖状态栏 -->
		<!-- <view :style="{height: statusBarHeight + 'px'}"></view> -->
		<!-- 增加页面跳转过来的参数，根据参数来判断是个人还是朋友，参数可以拓展，页面公用 -->


		<swiper style="my-swiper" :style="{height: screenHeight + 'px'}">
			<swiper-item>
				<video-detail :screenHeight="screenHeight" :playStatus="playStatus" :vlog="vlog"></video-detail>
			</swiper-item>
		</swiper>

		<view class="header" :style="{marginTop:statusBarHeight+'px'}">
			<image class="header-icon" src="../../static/back.png" @click="back()">
				<image class="header-avator" :src="vlog.cover" @click="link()">
		</view>

	</view>
</template>

<script>
	var system = uni.getSystemInfoSync();

	import videoDetail from '@/components/videoDetail.vue';

	export default {
		components: {
			videoDetail
		},
		data() {
			return {
				vlog: null,
				playStatus: true,
				statusBarHeight: 0,
				screenHeight: 0,
				serviceLink: ''
			}
		},
		onLoad(option) {
			this.statusBarHeight = system.statusBarHeight;
			var screenHeight = system.safeArea.bottom + 50;
			this.screenHeight = screenHeight;

			// 获得参数
			var vlog = JSON.parse(option.vlog);
			this.vlog = vlog;

			this.serviceLink = uni.getStorageSync("serviceLink")
		},
		onShow() {
			// getApp().getUserIsDisable();
		},
		onHide() {
			// TODO 隐藏的时候暂停播放
		},
		methods: {
			back() {
				uni.navigateBack({
					delta: 1
				})
			},
			link() {
				plus.runtime.openURL(this.serviceLink);
				// uni.navigateTo({
				// 	url: "../service/service",
				// });
			}
		}
	}
</script>
